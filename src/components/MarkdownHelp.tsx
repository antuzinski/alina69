import React, { useState } from 'react';
import { HelpCircle, X } from 'lucide-react';

const MarkdownHelp: React.FC = () => {
  const [isOpen, setIsOpen] = useState(false);

  const examples = [
    {
      title: '–ó–∞–≥–æ–ª–æ–≤–∫–∏',
      syntax: '# –ë–æ–ª—å—à–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫\n## –°—Ä–µ–¥–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫\n### –ú–∞–ª–µ–Ω—å–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫',
      description: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ # –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ä–∞–∑–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è'
    },
    {
      title: '–í—ã–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞',
      syntax: '**–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç**\n*–ö—É—Ä—Å–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç*',
      description: '–î–≤–æ–π–Ω—ã–µ –∑–≤–µ–∑–¥–æ—á–∫–∏ –¥–ª—è –∂–∏—Ä–Ω–æ–≥–æ, –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ –¥–ª—è –∫—É—Ä—Å–∏–≤–∞'
    },
    {
      title: '–¶–∏—Ç–∞—Ç—ã',
      syntax: '> –≠—Ç–æ –∫–æ—Ä–æ—Ç–∫–∞—è —Ü–∏—Ç–∞—Ç–∞\n\n> –≠—Ç–æ –¥–ª–∏–Ω–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç\n> –∑–∞–Ω–∏–º–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –∏ –±—É–¥–µ—Ç\n> –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∫–∞–∫ –µ–¥–∏–Ω—ã–π –±–ª–æ–∫.\n>\n> –ù–æ–≤—ã–π –∞–±–∑–∞—Ü –≤–Ω—É—Ç—Ä–∏ —Ç–æ–π –∂–µ —Ü–∏—Ç–∞—Ç—ã.',
      description: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ > –≤ –Ω–∞—á–∞–ª–µ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏. –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ —Å > —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –∞–±–∑–∞—Ü –≤–Ω—É—Ç—Ä–∏ —Ü–∏—Ç–∞—Ç—ã'
    },
    {
      title: '–°–ø–∏—Å–∫–∏',
      syntax: '- –≠–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞\n- –î—Ä—É–≥–æ–π —ç–ª–µ–º–µ–Ω—Ç\n\n1. –ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫\n2. –í—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç',
      description: '–î–µ—Ñ–∏—Å –¥–ª—è –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ, —Ü–∏—Ñ—Ä—ã –¥–ª—è –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ'
    },
    {
      title: '–°—Å—ã–ª–∫–∏',
      syntax: '[–¢–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏](https://example.com)',
      description: '–¢–µ–∫—Å—Ç –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö, URL –≤ –∫—Ä—É–≥–ª—ã—Ö'
    },
    {
      title: '–ö–æ–¥',
      syntax: '`–∫–æ–¥ –≤ —Å—Ç—Ä–æ–∫–µ`\n\n```\n–±–ª–æ–∫ –∫–æ–¥–∞\n–Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫\n```',
      description: '–û–¥–∏–Ω–∞—Ä–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –¥–ª—è —Å—Ç—Ä–æ–∫–∏, —Ç—Ä–æ–π–Ω—ã–µ –¥–ª—è –±–ª–æ–∫–∞'
    }
  ];

  if (!isOpen) {
    return (
      <button
        onClick={() => setIsOpen(true)}
        className="flex items-center space-x-1 text-gray-400 hover:text-emerald-500 transition-colors text-sm"
        title="–°–ø—Ä–∞–≤–∫–∞ –ø–æ Markdown"
      >
        <HelpCircle className="w-4 h-4" />
        <span>Markdown —Å–ø—Ä–∞–≤–∫–∞</span>
      </button>
    );
  }

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-gray-800 rounded-lg max-w-2xl w-full max-h-[80vh] overflow-y-auto">
        <div className="flex items-center justify-between p-4 border-b border-gray-700">
          <h3 className="text-lg font-semibold text-gray-100">–°–ø—Ä–∞–≤–∫–∞ –ø–æ Markdown</h3>
          <button
            onClick={() => setIsOpen(false)}
            className="text-gray-400 hover:text-gray-300 transition-colors"
          >
            <X className="w-5 h-5" />
          </button>
        </div>
        
        <div className="p-4 space-y-6">
          {examples.map((example, index) => (
            <div key={index} className="space-y-2">
              <h4 className="text-emerald-400 font-medium">{example.title}</h4>
              <p className="text-gray-400 text-sm">{example.description}</p>
              <pre className="bg-gray-900 rounded p-3 text-sm text-gray-300 overflow-x-auto">
                <code>{example.syntax}</code>
              </pre>
            </div>
          ))}
          
          <div className="pt-4 border-t border-gray-700">
            <p className="text-gray-400 text-sm">
              üí° <strong>–°–æ–≤–µ—Ç:</strong> –í—ã –º–æ–∂–µ—Ç–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ã—á–Ω—ã–µ —Å—Å—ã–ª–∫–∏ - –æ–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∞–Ω—É—Ç –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º–∏.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default MarkdownHelp;